<BAPI_Plan
    :version  52
    :superclass  "Plan"
    :doc
	<BAPI_Text
	    :hard_lab  "Doc:"
	    :lab  "Documentation"
	    :val  `/**
Keep the given area monitored for area state changes
*/`
	>
    :name  "AreaMonitorPlan"
    :filename  "unitn/aose/warehousesim/agent/AreaMonitorPlan.gplan"
    :type  "aos.jack.ed.Plan"
    :java
	<BAPI_Java
	    :pkg
		<BAPI_TextLine
		    :val  "unitn.aose.warehousesim.agent"
		>
	    :imports
		(
		    <BAPI_TextLine
			:val  "aos.jack.util.cursor.Change"
		    >
		    <BAPI_TextLine
			:val  "unitn.aose.warehousesim.api.data.AreaRef"
		    >
		    <BAPI_TextLine
			:val  "unitn.aose.warehousesim.api.AreaState"
		    >
		    <BAPI_TextLine
			:val  "unitn.aose.warehousesim.api.data.BoxRef"
		    >
		    <BAPI_TextLine
			:val  "unitn.aose.warehousesim.api.ITellerMachine"
		    >
		)
	>
    :handled_event
	<BAPI_FileRef
	    :name  "AreaMonitorEvent"
	    :filename  "unitn/aose/warehousesim/agent/AreaMonitorEvent.gevent"
	    :label  "handles AreaMonitorEvent"
	    :type  "aos.jack.ed.Event"
	    :java
		<BAPI_Java
		    :pkg
			<BAPI_TextLine
			>
		>
	    :refType  "handles"
	    :refName  "ev"
	    :dropHandlerName  "NamedEvent.drop"
	    :allowsReplace  :true
	>
    :relevant
	<BAPI_Text
	    :lab  "Relevance"
	    :val  `static boolean relevant(<<HandlesType>> ev)
{
    return true;
}
`
	    :init  `static boolean relevant(<<HandlesType>> ev)
{
    return true;
}
`
	    :isLabelEditable  :false
	>
    :context
	<BAPI_Text
	    :lab  "Context"
	    :val  `context()
{
    true;
}
`
	    :init  `context()
{
    true;
}
`
	    :isLabelEditable  :false
	>
    :databases
	(
	    <BAPI_FileRef
		:name  "DataLog"
		:filename  "unitn/aose/warehousesim/agent/DataLog_-dataLog.gnd"
		:label  "uses DataLog"
		:type  "aos.jack.ed.NamedData"
		:java
		    <BAPI_Java
			:pkg
			    <BAPI_TextLine
			    >
		    >
		:attrs  "ReadWriteableDBList.attrs"
		:refType  "uses"
		:refName  "dataLog"
		:dropHandlerName  "NamedData.drop"
	    >
	    <BAPI_FileRef
		:name  "AreaInfo"
		:filename  "unitn/aose/warehousesim/agent/AreaInfo_-areas.gnd"
		:label  "uses AreaInfo"
		:type  "aos.jack.ed.NamedData"
		:java
		    <BAPI_Java
			:pkg
			    <BAPI_TextLine
			    >
		    >
		:attrs  "ReadWriteableDBList.attrs"
		:refType  "uses"
		:refName  "areas"
		:dropHandlerName  "NamedData.drop"
	    >
	    <BAPI_FileRef
		:name  "WarehouseData"
		:filename  "unitn/aose/warehousesim/agent/WarehouseData_-myWarehouse.gnd"
		:label  "uses WarehouseData"
		:type  "aos.jack.ed.NamedData"
		:java
		    <BAPI_Java
			:pkg
			    <BAPI_TextLine
			    >
		    >
		:attrs  "ReadWriteableDBList.attrs"
		:refType  "uses"
		:refName  "myWarehouse"
		:dropHandlerName  "NamedData.drop"
	    >
	)
    :reasoning_methods
	(
	    <"BAPI_Text#aos.jack.ed.ReasoningMethod"
		:lab  "body"
		:val  `body()
{
    AreaRef a = myWarehouse.getWarehouse().getArea(ev.areaName);
    dataLog.log("AreaMonitorPlan monitoring area "+a);
    for(;true;){
        //wait for the areastate to be changed
        @wait_for(new Change(a.getAreaMonitor(), false));
        int areaState = RobotData.getAreaState((AreaState)a.getState().get());
        BoxRef b = a.getBox();
        String boxName = null;
        if(null!=b){
            boxName = b.getName();
        }
        dataLog.log("updating area "+a+" to state: "+a.getState().get()+" (box "+boxName+")");
        areas.updateAreaState(ev.areaName, areaState, boxName);
    }
}
`
	    >
	)
>
