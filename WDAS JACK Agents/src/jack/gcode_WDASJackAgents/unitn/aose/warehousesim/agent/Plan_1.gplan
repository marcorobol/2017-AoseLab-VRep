<BAPI_Plan
    :version  52
    :superclass  "Plan"
    :doc
	<BAPI_Text
	    :hard_lab  "Doc:"
	    :lab  "Documentation"
	>
    :name  "Plan_1"
    :filename  "unitn/aose/warehousesim/agent/Plan_1.gplan"
    :type  "aos.jack.ed.Plan"
    :java
	<BAPI_Java
	    :pkg
		<BAPI_TextLine
		    :val  "unitn.aose.warehousesim.agent"
		>
	>
    :handled_event
	<BAPI_FileRef
	    :name  "Event_1"
	    :filename  "unitn/aose/warehousesim/agent/Event_1.gevent"
	    :label  "handles Event_1"
	    :type  "aos.jack.ed.Event"
	    :java
		<BAPI_Java
		    :pkg
			<BAPI_TextLine
			>
		>
	    :refType  "handles"
	    :refName  "ev"
	    :dropHandlerName  "NamedEvent.drop"
	    :allowsReplace  :true
	>
    :relevant
	<BAPI_Text
	    :lab  "Relevance"
	    :val  `static boolean relevant(<<HandlesType>> ev)
{
    return true;
}
`
	    :init  `static boolean relevant(<<HandlesType>> ev)
{
    return true;
}
`
	    :isLabelEditable  :false
	>
    :context
	<BAPI_Text
	    :lab  "Context"
	    :val  `context()
{
    true;
}
`
	    :init  `context()
{
    true;
}
`
	    :isLabelEditable  :false
	>
    :databases
	(
	    <BAPI_FileRef
		:name  "DataLog"
		:filename  "unitn/aose/warehousesim/agent/DataLog_-dataLog.gnd"
		:label  "uses DataLog"
		:type  "aos.jack.ed.NamedData"
		:java
		    <BAPI_Java
			:pkg
			    <BAPI_TextLine
			    >
		    >
		:attrs  "ReadWriteableDBList.attrs"
		:refType  "uses"
		:refName  "dataLog"
		:dropHandlerName  "NamedData.drop"
	    >
	    <BAPI_FileRef
		:name  "RobotData"
		:filename  "unitn/aose/warehousesim/agent/RobotData_-myRobot.gnd"
		:label  "uses RobotData"
		:type  "aos.jack.ed.NamedData"
		:java
		    <BAPI_Java
			:pkg
			    <BAPI_TextLine
			    >
		    >
		:attrs  "ReadWriteableDBList.attrs"
		:refType  "uses"
		:refName  "myRobot"
	    >
	    <BAPI_FileRef
		:name  "RobotInfo"
		:filename  "unitn/aose/warehousesim/agent/RobotInfo_-robotInfo.gnd"
		:label  "uses RobotInfo"
		:type  "aos.jack.ed.NamedData"
		:java
		    <BAPI_Java
			:pkg
			    <BAPI_TextLine
			    >
		    >
		:attrs  "ReadWriteableDBList.attrs"
		:refType  "uses"
		:refName  "robotInfo"
	    >
	)
    :reasoning_methods
	(
	    <"BAPI_Text#aos.jack.ed.ReasoningMethod"
		:lab  "body"
		:val  `body()
{
    dataLog.log("hello plan! " + myRobot.getName());
    Object onLeft=null;
    while(onLeft == null){
        try{ 
            //Object pos = myRobot.getPosition().get(); //position of the robot
            /* Object movement = myRobot.getMovement().get(); //what the robot is doing
            onLeft = myRobot.getAreaOnLeft().get();
            Object loadUnloadState = myRobot.getLoadUnload().get(); //load or unload state
            agentInfo.add(myRobot.getName(), pos.toString(), movement.toString(), loadUnloadState.toString());*/
            //dataLog.log("ROBOT NAME = " + myRobot.getName()); // + " POSITION = " + pos + " MOVEMENT = " + movement + " LEFT " + onLeft+ " STATE= " + loadUnloadState);
            
        }
        catch(Exception e){
            dataLog.log("Error beliefset: "+e);
        }
        
        myRobot.stopHere();
        @sleep(1);
        myRobot.moveBackward();
        
        @sleep(5);
        myRobot.stopHere();
        @sleep(1);
        myRobot.moveForward();
        @sleep(5); 
    }
  
    if(onLeft != null){
        myRobot.stopHere();
        //myRobot.loadLeft();
    }
    
    
}
`
	    >
	)
>
