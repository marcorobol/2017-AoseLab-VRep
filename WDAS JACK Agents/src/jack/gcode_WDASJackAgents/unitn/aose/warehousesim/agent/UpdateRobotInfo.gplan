<BAPI_Plan
    :version  52
    :superclass  "Plan"
    :doc
	<BAPI_Text
	    :hard_lab  "Doc:"
	    :lab  "Documentation"
	    :val  `/**
 * 
 */`
	>
    :name  "UpdateRobotInfo"
    :filename  "unitn/aose/warehousesim/agent/UpdateRobotInfo.gplan"
    :type  "aos.jack.ed.Plan"
    :java
	<BAPI_Java
	    :pkg
		<BAPI_TextLine
		    :val  "unitn.aose.warehousesim.agent"
		>
	    :imports
		(
		    <BAPI_TextLine
			:val  "aos.jack.util.cursor.Change"
		    >
		    <BAPI_TextLine
			:val  "unitn.aose.warehousesim.api.ICartPerception"
		    >
		    <BAPI_TextLine
			:val  "unitn.aose.warehousesim.api.data.MovementWithRespectToMe"
		    >
		)
	>
    :handled_event
	<BAPI_FileRef
	    :name  "UpdateInfo"
	    :filename  "unitn/aose/warehousesim/agent/UpdateInfo.gevent"
	    :label  "handles UpdateInfo"
	    :type  "aos.jack.ed.Event"
	    :java
		<BAPI_Java
		    :pkg
			<BAPI_TextLine
			>
		>
	    :refType  "handles"
	    :refName  "ev"
	    :dropHandlerName  "NamedEvent.drop"
	    :allowsReplace  :true
	>
    :relevant
	<BAPI_Text
	    :lab  "Relevance"
	    :val  `static boolean relevant(<<HandlesType>> ev)
{
    return true;
}
`
	    :init  `static boolean relevant(<<HandlesType>> ev)
{
    return true;
}
`
	    :isLabelEditable  :false
	>
    :context
	<BAPI_Text
	    :lab  "Context"
	    :val  `context()
{
    true;
}
`
	    :init  `context()
{
    true;
}
`
	    :isLabelEditable  :false
	>
    :databases
	(
	    <BAPI_FileRef
		:name  "DataLog"
		:filename  "unitn/aose/warehousesim/agent/DataLog_-dataLog.gnd"
		:label  "uses DataLog"
		:type  "aos.jack.ed.NamedData"
		:java
		    <BAPI_Java
			:pkg
			    <BAPI_TextLine
			    >
		    >
		:attrs  "ReadWriteableDBList.attrs"
		:refType  "uses"
		:refName  "dataLog"
		:dropHandlerName  "NamedData.drop"
	    >
	    <BAPI_FileRef
		:name  "RobotInfo"
		:filename  "unitn/aose/warehousesim/agent/RobotInfo_-robotInfo.gnd"
		:label  "uses RobotInfo"
		:type  "aos.jack.ed.NamedData"
		:java
		    <BAPI_Java
			:pkg
			    <BAPI_TextLine
			    >
		    >
		:attrs  "ReadWriteableDBList.attrs"
		:refType  "uses"
		:refName  "robotInfo"
		:dropHandlerName  "NamedData.drop"
	    >
	    <BAPI_FileRef
		:name  "RobotData"
		:filename  "unitn/aose/warehousesim/agent/RobotData_-myRobot.gnd"
		:label  "uses RobotData"
		:type  "aos.jack.ed.NamedData"
		:java
		    <BAPI_Java
			:pkg
			    <BAPI_TextLine
			    >
		    >
		:attrs  "ReadWriteableDBList.attrs"
		:refType  "uses"
		:refName  "myRobot"
		:dropHandlerName  "NamedData.drop"
	    >
	    <BAPI_FileRef
		:name  "PerceptionInfo"
		:filename  "unitn/aose/warehousesim/agent/PerceptionInfo_-otherRobots.gnd"
		:label  "uses PerceptionInfo"
		:type  "aos.jack.ed.NamedData"
		:java
		    <BAPI_Java
			:pkg
			    <BAPI_TextLine
			    >
		    >
		:attrs  "ReadWriteableDBList.attrs"
		:refType  "uses"
		:refName  "otherRobots"
		:dropHandlerName  "NamedData.drop"
	    >
	)
    :reasoning_methods
	(
	    <"BAPI_Text#aos.jack.ed.ReasoningMethod"
		:lab  "body"
		:val  `body()
{
    for(;true;){
        @wait_for(new Change(myRobot, false));
        
        robotInfo.add(
            myRobot.getPosition(), 
            myRobot.getMovement(),
            myRobot.getLoadUnload(),
            myRobot.getAreaOnLeft(),
            myRobot.getAreaOnRight(),
            myRobot.getBoxOnLeft(),
            myRobot.getBoxOnRight(),
            myRobot.getCrossHaed(),
            myRobot.getCrossBehind(),
            myRobot.getCrossHere(),
            myRobot.getLoadedBox());
            
        for(int pwr=0; pwr<8; ++pwr){
            ICartPerception p = myRobot.getCartPerception(pwr);
            if(null != p){
                MovementWithRespectToMe mwr = (MovementWithRespectToMe)p.getMovementWithRespectToMe().get();
                String name = p.getCart().getName();
                otherRobots.add(pwr, name, RobotData.getMovementWithRespectToMe(mwr));
                dataLog.log("cart perception at "+pwr+" "+name+" "+mwr);
            }else{
                otherRobots.remove(pwr);
            }
        }
    }
   
}
`
	    >
	)
>
